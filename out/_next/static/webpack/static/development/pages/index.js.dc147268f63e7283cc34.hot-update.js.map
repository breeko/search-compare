{"version":3,"file":"static/webpack/static/development/pages/index.js.dc147268f63e7283cc34.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { Box, Card, Chip, CircularProgress, Container, createStyles, Divider, InputAdornment, Link, makeStyles, TextField, Theme, Typography } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Head from \"next/head\"\nimport React, { useState } from \"react\"\nimport SearchResultsTable from \"../components/SearchResultsTable\"\nimport { getDdgResults, getGoogleResults } from \"../utils/api\"\nimport Header from '../components/Header'\n\nconst Index = () => {\n    const [search, setSearch] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n    const [googleResults, setGoogleResults] = useState<SearchResult[] | undefined>(undefined)\n    const [ddgResults, setDdgResults] = useState<SearchResult[] | undefined>(undefined)\n    \n    \n    const runSearch = (search: string) => {\n        if (search) {\n            setIsLoading(true)\n            setDdgResults(undefined)\n            setGoogleResults(undefined)\n            const g = getGoogleResults(search, 2).then(setGoogleResults)\n            const d = getDdgResults(search).then(setDdgResults)\n            Promise.all([g, d]).then(() => setIsLoading(false))\n        }\n    }\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                flexWrap: 'wrap',\n                '& > *': {\n                    margin: theme.spacing(0.5),\n                },\n            },\n            suggestions: {\n                display: 'inline-block',\n                flexWrap: 'wrap',\n                margin: theme.spacing(0.5),\n                '& > *': {\n                    fontSize: 14,\n                    margin: theme.spacing(0.5),    \n                }\n            },\n        }),\n    )\n    const classes = useStyles()\n\n    const suggestions = {\n        general: [\"ddg\", \"google\", \"fb\", \"st patricks in 2022\",  \"date of ny marathon\",],\n        news: [\"2008 crisis\", \"corona virus\"],\n        politics: [\"trump\", \"sanders\", \"biden\", \"republicans\", \"democrats\"],\n        shopping: [\"buy tv\", \"best cell phone\", \"flights\"],\n        conspiracy: [\"are vacccines dangerous\", \"flat earth\", \"bush 9/11\", \"jfk assassination\", \"clinton body count\", \"moon landing\"],\n        entertainment: [\"eminem fast song\", \"news guy spider man actor\"],\n        programming: [\"css center text\", \"implicits scala 3.0\", \"regex match .com\", \"tsfiddle\",],\n    }\n    return(\n        <React.Fragment>\n            <Head>\n                <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.ico\" />\n            </Head>\n            <Container maxWidth=\"lg\">\n                <Header/>\n                <Link href=\"/about\">About</Link>\n                <Divider />\n                <Box my={4} style={{display: \"inline-block\"}}>\n                    { Object.entries(suggestions).map(([category, terms]) =>\n                        <Paper key={category} className={classes.suggestions}>\n                            <Typography color=\"textSecondary\" gutterBottom>\n                                {category}\n                            </Typography>\n                            {terms.map(term =>\n                                <Chip\n                                    key={`${category}${term}`}\n                                    style={{margin: 10}}\n                                    label={term} onClick={() => {setSearch(term); runSearch(term)}}\n                                />)\n                            }\n                        </Paper>\n                    )}\n                </Box>\n                <Divider />\n                <Box my={4}>\n                    <Card className={classes.root}>\n                        <TextField\n                            autoFocus\n                            placeholder=\"Search Term\"\n                            onChange={e => setSearch(e.target.value)}\n                            value={search}\n                            onKeyPress={(e) => e.key === \"Enter\" && runSearch(search)}\n                            InputProps={{startAdornment: <InputAdornment position=\"start\"><SearchIcon/></InputAdornment>}}\n                        />\n                    </Card>\n                </Box>\n                <Divider/>\n                <Box my={4}>\n                    {isLoading && <CircularProgress />}\n                    {googleResults !== undefined && ddgResults !== undefined &&\n                        <SearchResultsTable resultsLeft={googleResults} resultsRight={ddgResults}/>\n                    }\n                </Box>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAPA;AADA;AAmeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}